---
en:
  scratch-intro:
    title: "Introduction to Scratch: sprites, scripts, and loops"
    description: In this introduction to coding in Scratch for beginners, you will learn how to add code, costumes, and sounds to sprites as you make animations, a game, an app, and a book.
    meta_title: Project path | Intro to Scratch programming for kids
    meta_description: Introduction to Scratch programming for kids, teenagers and young adults. Learn how to make animations, a game, an app, and a book.
    header:
      - title: "What will I create?"
        content: |
          Through this path you will create an interactive project, games, a simulation, and a piece of digital art.
          By the end of this path you will have used your new skills to become a digital artist with your own unique, inspirational piece of art that can be scaled using repeated patterns.
      - title: "What do I need to know?"
        content: |
          - Basic typing and computer navigation skills
          - "Experience coding in Scratch. If you are unfamiliar with Scratch you could try our Scratch paths, [Introduction to Scratch](https://projects.raspberrypi.org/en/pathways/scratch-intro), [More Scratch](https://projects.raspberrypi.org/en/pathways/more-scratch), and [Further Scratch](https://projects.raspberrypi.org/en/pathways/further-scratch)."
      - title: "What do I need?"
        content: |
           - Access to a web browser capable of running [trinket.io](https://trinket.io).
      - title: "Facilitator information"
        content: |
          ##321…Make!
          This path is made up of three different types of project in a 3-2-1 structure:

          - 3 Explore projects to introduce creators to a set of skills, and provide step-by-step instructions to help them develop initial confidence.
          - 2 Design projects to allow creators to practise the skills they learned in the previous Explore projects, and to express themselves creatively whilst growing independence.
          - 1 Invent project where creators meet a project brief for a particular audience using their skills.

          ##Reflection
          Each project contains a reflection step. Reflecting is an important part of learning, because it helps make new connections in your brain. Creators answer three questions to reflect on what they’ve learned.

          After each question, they press ‘Check my answer’. If an answer is incorrect, useful feedback will guide them towards the correct answer. There is no limit to the amount of times they can attempt each question.

          ##Saving projects in Trinket
          If creators have a Trinket account, they can remix the starter projects to save a copy to their My Trinkets library.

          If they don’t have a Trinket account, they can still come back to their project in the future by using the same computer and using the starter project link.

          ##Inspiring the community
          Creators are encouraged to inspire others in the Raspberry Pi Foundation community by sharing their projects with us via the [project submissions form](https://form.raspberrypi.org/f/community-project-submissions). Projects will be anonymously shared to our Community Galleries.
  more-scratch:
    title: "More Scratch: broadcast, decisions and variables"
    description: More Scratch moves beyond the basics introduced in Introduction to Scratch. You will make apps, games and simulations using message broadcasting, if..then and if..then..else decisions and variables.
    meta_title: Project path | More Scratch for kids | Raspberry Pi
    meta_description: More Scratch for kids, teenagers and young adults. Move beyond the basics to code apps, games, and animations using message broadcasts, with these free projects.
  further-scratch:
    title: "Further Scratch: clones, my blocks, and boolean logic"
    description: Further Scratch moves beyond the skills introduced in Introduction to Scratch and More Scratch. You will make apps, games, computer-generated art, and simulations using boolean logic, functions, clones, and more.
    meta_title: Project path | Further Scratch coding for kids | Raspberry Pi
    meta_description: Further Scratch coding for kids, teenagers and young adults. Use these free coding resources to make apps, games, computer-generated art, and animations.
  scratch-module-1:
    title: "Scratch: Module 1"
    description: Learn how to program your own interactive stories, games and animations.
  scratch-module-2:
    title: "Scratch: Module 2"
    description: Learn how to program your own interactive stories, games and animations.
  scratch-module-3: 
    title: "Scratch: Module 3" 
    description: Learn how to program your own interactive stories, games and animations.
  scratch-additional-projects:
    title: "Scratch: Additional Projects"
    description: Learn how to program your own interactive stories, games and animations.
  webdev-module-1: 
    title: "HTML & CSS: Module 1"
    description: Build and style your own web pages.
  webdev-module-2: 
    title: "HTML & CSS: Module 2"
    description: Build and style your own web pages.
  python-intro: 
    title: "Introduction to Python: Variables, functions, and loops"
    description: In this introduction to coding in Python for beginners, you will learn how to use variables, loops, and functions to create visual and interactive artwork, animations, simulations, games, and more. 
    meta_title: Project path | Intro to Python for kids | Raspberry Pi
    meta_description: Introduction to Python for kids, teenagers and young adults. Create interactive artwork, animations, and games with these free resources.
  more-python: 
    title: "More Python: Lists, dictionaries, and data"
    description: More Python moves beyond the basics introduced in Introduction to Python. You will learn how to use lists, dictionaries and files to create charts, models and artwork. 
    meta_title: Project path | More Python projects for kids | Raspberry Pi
    meta_description: More Python projects for kids, teenagers and young adults. Learn how to use lists, dictionaries and files to create charts, models and artwork.
  python-module-1: 
    title: "Python: Module 1"
    description: Python is a widely used, general purpose, text-based programming language.
  python-module-2: 
    title: "Python: Module 2"
    description: Python is a widely used, general purpose, text-based programming language.
  unity-intro: 
    title: "Introduction to Unity: 3D Objects, Character Controllers, Colliders, Text and Buttons"
    description: In this introduction to Unity you will learn how to make 3D worlds and games with collectibles, timers and non-player characters.
    meta_title: Project path | Unity coding for kids | Raspberry Pi
    meta_description: Introduction to Unity coding for kids, teenagers and young adults. Learn how to make 3D worlds and games using these free resources. 
  physical-computing-with-scratch-and-the-raspberry-pi: 
    title: Physical computing with Scratch and the Raspberry Pi
    description: Learn how to use input and output electronics with Scratch and your Raspberry Pi computer.
    meta_title: Project path | Coding in Scratch for kids | Raspberry Pi
    meta_description: Learn how to use input and output electronics with Scratch on your Raspberry Pi computer. Free resources - coding in scratch for kids, teens and young adults.
  pico-intro: 
    title: "Introduction to Raspberry Pi Pico: LEDs, buzzers, switches, and dials"
    description: In this introduction to digital making with Raspberry Pi Pico for beginners, you will learn how to connect and control LEDs, buttons, switches, buzzers and potentiometers (dials).
    meta_title: Project path | Introduction to the Raspberry Pi Pico
    meta_description: In this introduction to digital making with Raspberry Pi Pico for beginners, you will learn how to connect and control LEDs, buttons, switches, buzzers, etc.
  raspberry-pi: 
    title: Raspberry Pi
    description: The Raspberry Pi is a capable little computer which can be used in electronics projects, and for many of the things that your desktop PC does.
  sense-hat: 
    title: Sense HAT
    description: The Sense HAT is an add-on board for the Raspberry Pi, including LEDs, a joystick and lots of sensors.
  sonic-pi: 
    title: Sonic Pi
    description: Sonic Pi is a new kind of musical instrument, designed for creating sounds with code.
  microbit: 
    title: "BBC micro:bit"
    description: "The BBC micro:bit is a pocket-sized, codeable computer that allows you to get creative."
  look-after-yourself:
    title: Look after yourself
    description: Learn to look after yourself, while learning how to use Scratch and work your way towards being an independent programmer.
  protect-our-planet: 
    title: Protect our planet
    description: Use Scratch to learn about our planet and how to protect the environment for future generations
  coderdojo-html_css:
    title: CoderDojo HTML & CSS
    description: Create websites by following these projects.
  coderdojo-scratch:
    title: CoderDojo Scratch
    description: Learn Scratch by working through these fun projects!
  coderdojo-wearables:
    title: CoderDojo Wearables
    description: Create wearable technology projects by following these projects.
  app-inventor-for-social-enterprise:
    title: App Inventor for social innovation
    description: Learn to make apps for Android devices by doing projects that can help people in your community.
  scratch-for-social-enterprise:
    title: Scratch for social innovation
    description: Learn Scratch, a beginner-friendly graphical programming language, while building apps and games to help people learn about important issues.
  html-css-for-social-enterprise:
    title: HTML & CSS for social innovation
    description: Learn HTML & CSS by creating a website about bird conservation.
  getting-started-with-raspberry-pi: 
    title: Get started with Raspberry Pi
    description: Set up your Raspberry Pi and see what it can do!
